/* [JDBC]: java와 DB를 연결해주는 과정 _(cf) window visual C 제공: ODBC)
driver Loading(적재):한 번만 설정( ==> 생성자!). ojdbc7.jar(자바압축파일)
Connection(연결): URL, user, pw 를 입력할 때마다 연결 (==> 생성자는 안되욤)
Statement / PreparedStatement (문장준비): SQL 명령어를 번역 ( java가 이해할 수 있도록)
*/

package dbTest.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class InsertTest {
	
	public InsertTest() {
		//OracleDriver.class 가 클래스인지, 인터페이스인지 타입을 알 수 없음 => 무엇이든 포괄할 수 있도록 Class 타입 으로 생성시킴 [몽타쥬]
		//forName 안은 풀 쿼리 네임(ex. String ==> java.lang.String) 으로 작성한다. .class 는 포함하지 않는다.  
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			System.out.println("driver loading!");			
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		
	} //constructor
	
	public void getConnection() {
		//Connection 인터페이스는 implementing class가 없다 => method로 생성
													//jdbc:oracle:드라이버명:서버:포트:데이터베이스명
		try {
			Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "java", "dkdlxl");
			System.out.println("connected!");
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		
		
		
	}
	
	public static void main(String[] args) {
		InsertTest it = new InsertTest();
		it.getConnection();
	}

}
// *.jar 는 필요한 프로젝트에 넣는다. (jre/jdk에 바로 집어넣으면 XXXX)
// 혹은, 서버에 넣어두고 서버에서 내려받는다. 

// 오라클 드라이버 thin
//ex 그래픽 드라이버	1. 지포스		2. AMD



